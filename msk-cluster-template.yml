AWSTemplateFormatVersion: '2010-09-09'
Description: Template to create new MSK cluster and security groups
Parameters:
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 10.0.0.0/8
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  VPC:
      Type: String
      Description: VpcId of your existing Virtual Private Cloud (VPC)
      Default: vpc-0a24a58b8eef8eb1d
Resources:
  KafkaClientInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref 'SSHLocation'
      VpcId: !Ref VPC
  MSKSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH access via port 22
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 2181
          ToPort: 2181
          SourceSecurityGroupId: !GetAtt 
            - KafkaClientInstanceSecurityGroup
            - GroupId
        - IpProtocol: tcp
          FromPort: 9094
          ToPort: 9094
          SourceSecurityGroupId: !GetAtt 
            - KafkaClientInstanceSecurityGroup
            - GroupId
        - IpProtocol: tcp
          FromPort: 9092
          ToPort: 9092
          SourceSecurityGroupId: !GetAtt 
            - KafkaClientInstanceSecurityGroup
            - GroupId
        - IpProtocol: tcp
          FromPort: 9096
          ToPort: 9096
          SourceSecurityGroupId: !GetAtt 
            - KafkaClientInstanceSecurityGroup
            - GroupId
  MSKKMSKey:
    Type: "AWS::KMS::Key"
    Properties:
      EnableKeyRotation: true
      MultiRegion: false
      Description: "Encrypt sensitive data for IC4E Tpi listener"
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Sid: "Enable IAM User Permissions"
            Effect: "Allow"
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  -
                    - "arn:aws:iam::"
                    - Ref: "AWS::AccountId"
                    - ":root"
            Action: "kms:*"
            Resource: "*"
      KeyUsage: ENCRYPT_DECRYPT
          
  KMSKeyAliasKMSKey:
    Type: "AWS::KMS::Alias"
    Properties:      
        AliasName: "alias/aflac-eib-tpi-key"
        TargetKeyId:
             Ref: "MSKKMSKey"
               
  ProducerMSKScramSecrets:
    Type: AWS::SecretsManager::Secret
    Properties:
      KmsKeyId: !GetAtt MSKKMSKey.Arn
      Name: AmazonMSK_Dhub_Producer_Secret
      Description: "Producer service credetials IC4E Tpi listener"
      SecretString: '{"username":"aflac-dhub-producer","password":"aflac-dhub-producer-secrete"}'
  
  ConsumerMSKScramSecrets:
    Type: AWS::SecretsManager::Secret
    Properties:
      KmsKeyId: !GetAtt MSKKMSKey.Arn
      Name: AmazonMSK_Eib_Listener_Secret
      Description: "Consumer service credetials IC4E Tpi listener"
      SecretString: '{"username":"aflac-eib-consumer","password":"aflac-eib-consumer-secrete"}'

  MSKCluster:
    Type: 'AWS::MSK::Cluster'
    Properties:
      BrokerNodeGroupInfo:
        ClientSubnets:
          - subnet-08c9e7e1b7d5f5c28
          - subnet-0bbc7184dea29ea7c
        InstanceType: kafka.m5.large
        SecurityGroups:
           - Ref: MSKSecurityGroup
        StorageInfo:
          EBSStorageInfo:
            VolumeSize: 1000
      ClientAuthentication:
        Sasl:
         Scram: 
           Enabled: true
      ClusterName: EIB-DEV1-MSK-CLUSTER
      EncryptionInfo:
        EncryptionAtRest:
            DataVolumeKMSKeyId: !Ref MSKKMSKey
        EncryptionInTransit:
          ClientBroker: TLS
          InCluster: true
      EnhancedMonitoring: PER_TOPIC_PER_BROKER
      KafkaVersion: 2.6.2
      NumberOfBrokerNodes: 12
      
  MSKClusterAssociateSecretes:
    Type: AWS::MSK::BatchScramSecret
    Properties: 
      ClusterArn: !Ref MSKCluster
      SecretArnList: 
            [!Ref ProducerMSKScramSecrets,!Ref ConsumerMSKScramSecrets]

 
